
# Enable C++ support
language: cpp

# Compiler selection
compiler:
  - gcc
  - clang
# before installation
before_install:
      # g++4.8.1
      - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
      # clang 3.4
      - if [ "$CXX" == "clang++" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi

      - sudo apt-get update -qq
      - sudo pip install --user cpp-coveralls

install:
    # g++4.8.1
      - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8; fi
      - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8"; fi
      - if [ "$CXX" = "g++" ]; then export GCOV="gcov-4.8"; fi
      - if [ "$CXX" = "g++" ]; then sudo cp -v `which gcov-4.8` `which gcov`; fi


    # clang 3.4
      - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.4; fi
      - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.4"; fi

    # install lcov
      - sudo apt-get install -y lcov
      - gem install coveralls-lcov

# Build steps
script:
  - mkdir build
  - cd build
  - cmake .. && make && ./cpp_cache

after_success:
    - cd CMakeFiles/cpp_cache.dir
    - ls
    - lcov --directory . --capture --output-file coverage.info # capture coverage info
    - lcov --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info # filter out system and test code
    - lcov --list coverage.info # debug before upload
    - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info # uploads to coveralls